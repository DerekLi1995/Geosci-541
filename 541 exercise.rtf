{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red38\green38\blue38;\red221\green32\blue103;
}
\margl1440\margr1440\vieww21000\viewh13800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Problem Set 1\
1. The answer is list\
> typeof(mtcars)\
[1] "list"\
\
2. Vector is one-dimensional array. It is stated in the tutorial.\
\
3. as.matrix(trees)\
      Girth Height Volume\
 [1,]   8.3     70   10.3\
 [2,]   8.6     65   10.3\
 [3,]   8.8     63   10.2\
 [4,]  10.5     72   16.4\
 [5,]  10.7     81   18.8\
 [6,]  10.8     83   19.7\
 [7,]  11.0     66   15.6\
 [8,]  11.0     75   18.2\
 [9,]  11.1     80   22.6\
[10,]  11.2     75   19.9\
[11,]  11.3     79   24.2\
[12,]  11.4     76   21.0\
[13,]  11.4     76   21.4\
[14,]  11.7     69   21.3\
[15,]  12.0     75   19.1\
[16,]  12.9     74   22.2\
[17,]  12.9     85   33.8\
[18,]  13.3     86   27.4\
[19,]  13.7     71   25.7\
[20,]  13.8     64   24.9\
[21,]  14.0     78   34.5\
[22,]  14.2     80   31.7\
[23,]  14.5     74   36.3\
[24,]  16.0     72   38.3\
[25,]  16.3     77   42.6\
[26,]  17.3     81   55.4\
[27,]  17.5     82   55.7\
[28,]  17.9     80   58.3\
[29,]  18.0     80   51.5\
[30,]  18.0     80   51.0\
[31,]  20.6     87   77.0\
\
4. answer: Atlanta\
> precip[14]\
Atlanta \
48.3 \
\
5. \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 MyFrame<-data.frame(mtcars,trees,precip)\cf4 \
\cf3 \
6. > typeof(precip)\
   [1] "double"\
Yes precip has numeric data, since R gives me double, which is a synonym of numeric.\
\
7. \
> mtcars[2,7]\
[1] 17.02\
\
> mtcars[2,"qsec"]\
[1] 17.02\
\
> mtcars[ ,"qsec"][2]\
[1] 17.02\
\
> mtcars["Mazda RX4 Wag",7]\
[1] 17.02\
\
8.\
>  precip["Juneau"] <- 23\
> precip[2]\
Juneau \
    23 \
\
> precip["Phoenix"] <- 46\
> precip[3]\
Phoenix \
     46 \
\
> precip["Sacramento"] <- 12\
> precip[6]\
Sacramento \
        12 \
\
9.\
> trees[1] > trees[3]\
      Girth\
 [1,] FALSE\
 [2,] FALSE\
 [3,] FALSE\
 [4,] FALSE\
 [5,] FALSE\
 [6,] FALSE\
 [7,] FALSE\
 [8,] FALSE\
 [9,] FALSE\
[10,] FALSE\
[11,] FALSE\
[12,] FALSE\
[13,] FALSE\
[14,] FALSE\
[15,] FALSE\
[16,] FALSE\
[17,] FALSE\
[18,] FALSE\
[19,] FALSE\
[20,] FALSE\
[21,] FALSE\
[22,] FALSE\
[23,] FALSE\
[24,] FALSE\
[25,] FALSE\
[26,] FALSE\
[27,] FALSE\
[28,] FALSE\
[29,] FALSE\
[30,] FALSE\
[31,] FALSE\
\
10.The final answer is 411.328\
> A = sum(trees[1])\
> A\
[1] 410.7\
\
> B = sum(mtcars[6,])\
> B\
[1] 385.54\
\
> C = sum(precip[1:8])\
> C\
[1] 242.1\
\
> C/B + A\
[1] 411.328\
\
Problem set 2\
Section 1\
1.To tell the function to sample with replacement.\
\
2.\
> set.seed(541)\
> MatrixElements<-sample(c(0,1), size = 96, replace=TRUE)\
> MyMatrix<-array(data=MatrixElements,dim=c(8,12))\
> MyMatrix\
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\
[1,]    1    0    0    0    1    1    1    0    0     0     0     1\
[2,]    1    1    1    0    1    0    0    0    0     1     1     0\
[3,]    1    1    0    0    0    0    1    1    0     0     0     0\
[4,]    0    1    1    0    0    1    0    0    0     0     1     0\
[5,]    0    0    1    0    0    0    1    0    1     0     1     1\
[6,]    0    0    1    0    1    1    0    0    0     0     1     1\
[7,]    0    1    0    1    0    1    1    0    0     0     0     1\
[8,]    1    1    0    0    1    0    0    0    1     0     0     1\
\
\cf2 3. Not sure how to do it.\cf3 \
\
Section 2\
1.\
> set.seed(154)\
> MatrixElements<-sample(c(1,2,3,4,5,6,7,8,9,10), size = 96, replace=TRUE)\
> MyMatrix<-matrix(MatrixElements,8,12)\
> MyMatrix\
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\
[1,]    8    4    7    9    3    2    8    2    9     2     3     5\
[2,]    8    6    8   10    5   10    7    9    1    10     8    10\
[3,]    1    6    1    6    9    5    5    1    8     4    10     1\
[4,]    7    1    5   10    2    2    3    7    7     2     9    10\
[5,]    9    6    7    5    9    9    7    1    4     3    10     2\
[6,]    1    2    9    9    2   10    8   10   10     4     7     3\
[7,]    9    9    1    2   10    6    6    9    7    10     8     8\
[8,]    8    3    7    7    7   10    7    7    7     7     4     3\
> M<-(MyMatrix == 7)\
> M\
      [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9] [,10] [,11] [,12]\
[1,] FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\
[2,] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\
[3,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\
[4,]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE\
[5,] FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\
[6,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\
[7,] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE\
[8,] FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE\
> sum(M == TRUE)\
[1] 16\
\
2.\
> apply(MyMatrix,2,sum)\
 [1] 51 37 45 58 47 54 51 46 53 42 59 42\
\
3.\
> apply(MyMatrix,2,prod)\
 [1]  290304   46656  123480 3402000  340200 1080000 1975680   79380  987840\
[10]  134400 4838400   72000\
\
4.\
> MyMatrix[which(MyMatrix==10)]<-12\
> MyMatrix\
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\
[1,]    8    4    7    9    3    2    8    2    9     2     3     5\
[2,]    8   12    8   12    5   12    7    9    1    12     8    12\
[3,]    1    6    1    6    9    5    5    1    8     4    12     1\
[4,]    7    1    5   12    2    2    3    7    7     2     9    12\
[5,]    9    6    7    5    9    9    7    1    4     3    12     2\
[6,]    1    2    9    9    2   12    8   12   12     4     7     3\
[7,]    9    9    1    2   12    6    6    9    7    12     8     8\
[8,]    8    3    7    7    7   12    7    7    7     7     4     3\
\
5. \
> which(MyMatrix > 3 & MyMatrix < 8)\
 [1]  4  9 11 13 17 20 21 24 27 29 32 34 40 43 47 50 51 53 55 56 60 64 68 69 71 72 75 78 80 86 88 89\
By Counting, 32 values are greater than 3 and less than 8.\
\
6.\
> MyMatrix[,12]<-NA\
> MyMatrix\
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\
[1,]    8    4    7    9    3    2    8    2    9     2     3    NA\
[2,]    8   12    8   12    5   12    7    9    1    12     8    NA\
[3,]    1    6    1    6    9    5    5    1    8     4    12    NA\
[4,]    7    1    5   12    2    2    3    7    7     2     9    NA\
[5,]    9    6    7    5    9    9    7    1    4     3    12    NA\
[6,]    1    2    9    9    2   12    8   12   12     4     7    NA\
[7,]    9    9    1    2   12    6    6    9    7    12     8    NA\
[8,]    8    3    7    7    7   12    7    7    7     7     4    NA\
\
7.\
> set.seed(154)\
> MatrixElements<-sample(c(1,2,3,4,5,6,7,8,9,10), size = 96, replace=TRUE)\
> MyMatrix<-matrix(MatrixElements,8,12)\
> MyMatrix\
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\
[1,]    8    4    7    9    3    2    8    2    9     2     3     5\
[2,]    8    6    8   10    5   10    7    9    1    10     8    10\
[3,]    1    6    1    6    9    5    5    1    8     4    10     1\
[4,]    7    1    5   10    2    2    3    7    7     2     9    10\
[5,]    9    6    7    5    9    9    7    1    4     3    10     2\
[6,]    1    2    9    9    2   10    8   10   10     4     7     3\
[7,]    9    9    1    2   10    6    6    9    7    10     8     8\
[8,]    8    3    7    7    7   10    7    7    7     7     4     3\
> which(apply(MyMatrix,1,sum) > 70)\
[1] 2 5 6 7 8\
\
Problem set 3\
1.\
> mean(precip)\
[1] 34.88571\
> median(precip)\
[1] 36.6\
> sd(precip)\
[1] 13.70665\
\
2.\
Bar charts will be a better option, because only in bar charts, categorical variables can be represented. \
\
3.\
> set.seed(124)\
> norm<-rnorm(70, 34.88571, 13.70665)\
> norm[1:70]\
 [1] 15.90103 35.41099 24.42712 37.79572 54.42506 45.09003 44.48351 31.74203 37.58721 51.43174 39.24904 15.37020 29.33327\
[14] 48.52913 48.02789 47.46962 32.81642 18.12153 22.97704 20.59673 19.75853 40.97400 32.07652 57.85302 33.08572 32.14598\
[27] 35.63838 25.53551 24.91132 23.07189 34.37139 12.52436 37.31407 34.71437 29.48094 39.70446 46.93067 37.69083 22.72269\
[40] 28.34468 31.21588 56.62253 35.52856 39.77209 33.22200 34.39101 21.43746 28.93346 33.96073 48.34420 28.55252 31.80035\
[53] 23.28375 35.88693 31.11588 29.58910 34.25242 23.56547 23.17976 36.51319 38.77287 61.34073 19.25290 16.76390 51.72887\
[66] 27.36822 33.15857 44.31203 44.55164 45.87129\
> RandomNormal<-norm[1:70]\
> RandomNormal\
 [1] 15.90103 35.41099 24.42712 37.79572 54.42506 45.09003 44.48351 31.74203 37.58721 51.43174 39.24904 15.37020 29.33327\
[14] 48.52913 48.02789 47.46962 32.81642 18.12153 22.97704 20.59673 19.75853 40.97400 32.07652 57.85302 33.08572 32.14598\
[27] 35.63838 25.53551 24.91132 23.07189 34.37139 12.52436 37.31407 34.71437 29.48094 39.70446 46.93067 37.69083 22.72269\
[40] 28.34468 31.21588 56.62253 35.52856 39.77209 33.22200 34.39101 21.43746 28.93346 33.96073 48.34420 28.55252 31.80035\
[53] 23.28375 35.88693 31.11588 29.58910 34.25242 23.56547 23.17976 36.51319 38.77287 61.34073 19.25290 16.76390 51.72887\
[66] 27.36822 33.15857 44.31203 44.55164 45.87129\
\
4.\
> ks.test(precip,RandomNormal)\
\
	Two-sample Kolmogorov-Smirnov test\
\
data:  precip and RandomNormal\
D = 0.2, p-value = 0.1216\
alternative hypothesis: two-sided\
\
Because p-value, 0.1216, is larger than 0.05, we fail to reject the null hypothesis , which is that two vectors were drawn from identical distributions.\
\
\
5.\
> density(precip)\
\
Call:\
	density.default(x = precip)\
\
Data: precip (70 obs.);	Bandwidth 'bw' = 3.848\
\
       x                y            \
 Min.   :-4.544   Min.   :1.666e-05  \
 1st Qu.:16.228   1st Qu.:2.687e-03  \
 Median :37.000   Median :9.502e-03  \
 Mean   :37.000   Mean   :1.202e-02  \
 3rd Qu.:57.772   3rd Qu.:1.649e-02  \
 Max.   :78.544   Max.   :3.610e-02  \
\
> density(RandomNormal)\
\
Call:\
	density.default(x = RandomNormal)\
\
Data: RandomNormal (70 obs.);	Bandwidth 'bw' = 3.952\
\
       x                 y            \
 Min.   : 0.6693   Min.   :1.727e-05  \
 1st Qu.:18.8009   1st Qu.:2.185e-03  \
 Median :36.9325   Median :1.114e-02  \
 Mean   :36.9325   Mean   :1.377e-02  \
 3rd Qu.:55.0642   3rd Qu.:2.308e-02  \
 Max.   :73.1958   Max.   :3.805e-02  \
\
The test performed above is a good indicator, because it is sensitive to differences in both location and shape of distribution functions of two sample.\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}